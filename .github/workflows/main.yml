name: Deploy in cluster kubernetes

on:
  workflow_call:
    inputs:
      framework:
        required: true
        type: string
        default: 'astro'
      project-name:
        required: true
        type: string
      build-directory:
        required: false
        type: string
        default: 'dist'
      build-command:
        required: false
        type: string
        default: 'npm run build'
      destroy:
        required: false
        type: boolean
        default: false
      enable-testing:
        required: false
        type: boolean
        default: false
    secrets:
      account-id:
        required: true 
      cloudflare-token:
        required: true
      snow-token: 
        required: false
    outputs:
      static_webpage_url:
        description: 'The URL of the deployed static webpage'
        value: ${{ jobs.deploy-static-webpage.outputs.static_webpage_url }}
   
jobs:

  deploy-static-webpage: 
    runs-on: ubuntu-22.04
    outputs:
      static_webpage_url: ${{ steps.cloud-flare.outputs.static_webpage_url }}
    
    steps:

      # checkout app repository
      - uses: actions/checkout@v4

      - name: copy code to root for testing
        if: ${{ inputs.enable-testing }}
        run: |
          cp -r ./cloudflare-static-webpage-react-vite/* .
          echo "---- display files in root ----"
          ls
          echo "---- end display files in root ----"

      # Set up Astro & Cloudflare Pages
      - name: Setup project for astro
        if: ${{ inputs.framework == 'astro' }}
        run: |
          npm install wrangler@latest --save-dev
          npx astro add cloudflare
          npm install


      # Set up React & Cloudflare Pages
      - name: Setup project for react
        if: ${{ inputs.framework == 'react' }}
        run: |
          npm install wrangler@latest --save-dev
          npm install
        
      # Set up Angular & Cloudflare Pages
      - name: Setup project for angular
        if: ${{ inputs.framework == 'angular' }}
        run: |
          npm install
          
      # Set up Next & Cloudflare Pages
      - name: Setup project for next
        if: ${{ inputs.framework == 'next' }}
        run: |
          npm install wrangler@latest --save-dev
          npm install

      # Set up Vue & Cloudflare Pages
      - name: Setup project for vue
        if: ${{ inputs.framework == 'vue' }}
        run: |
          npm install wrangler@latest --save-dev
          npm install
      
      - name: Build project
        run: |
          echo "Building project with command: ${{ inputs.build-command }}"
          ${{ inputs.build-command  }}
          echo "---------------------"
          ls
          echo "---------------------"

      # Create project
      - name: Create project
        continue-on-error: true
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.cloudflare-token }}
          accountId: ${{ secrets.account-id }}
          command: |
            pages project create ${{ inputs.project-name }}
         

      # Deploy
      - name: Deploy
        id: wrangler-action
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.cloudflare-token }}
          accountId: ${{ secrets.account-id }}
          command: |
            pages deploy ./${{ inputs.build-directory }} --project-name ${{ inputs.project-name }}
          captureOutput: true

      # Set output URL
      - name: Set output URL
        id: cloud-flare
        run: |
          urls=$(echo "${{ steps.wrangler-action.outputs.command-output }}" | grep -oP 'https?://[^\s]+')
          echo "Extracted URLs: $urls"
          url1=$(echo "$urls" | sed -n '1p')
          echo "Extracted URL: $url1"
          echo "static_webpage_url=$url1" >> "$GITHUB_OUTPUT"

      # notify snow monkeys
